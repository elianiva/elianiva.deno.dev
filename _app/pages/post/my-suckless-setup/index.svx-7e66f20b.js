import{S as a,i as e,s as t,o,p as s,r as n,u as r,v as i,x as c,y as l,z as h,w as p,e as u,t as f,a as d,f as m,g,k as w,d as k,c as y,h as v,j as b,l as E}from"../../../chunks/stores-7ca13020.js";import{P as I}from"../../../chunks/post-14e8d485.js";import{U as T}from"../../../chunks/Update-70845eca.js";import"../../../chunks/ProgressButton-549bf321.js";import"../../../chunks/theme-0c5a7997.js";function P(a){let e,t;return{c(){e=u("p"),t=f("lmao guess who’s suddently got so obsessed with Lua and decided to use AwesomeWM")},l(a){e=m(a,"P",{});var o=g(e);t=w(o,"lmao guess who’s suddently got so obsessed with Lua and decided to use AwesomeWM"),o.forEach(k)},m(a,o){b(a,e,o),E(e,t)},d(a){a&&k(e)}}}function S(a){let e,t,o,s,n;return{c(){e=u("p"),t=f("Some of you might think it’s the best, but then I came across "),o=u("a"),s=f("Alacritty"),n=f(" and it’s instantly became my new “best terminal” out there."),this.h()},l(a){e=m(a,"P",{});var r=g(e);t=w(r,"Some of you might think it’s the best, but then I came across "),o=m(r,"A",{href:!0,rel:!0});var i=g(o);s=w(i,"Alacritty"),i.forEach(k),n=w(r," and it’s instantly became my new “best terminal” out there."),r.forEach(k),this.h()},h(){v(o,"href","https://github.com/alacritty/alacritty"),v(o,"rel","nofollow")},m(a,r){b(a,e,r),E(e,t),E(e,o),E(o,s),E(e,n)},d(a){a&&k(e)}}}function x(a){let e,t,o,i,p,I,x,A,M,L,D,C,W,O,H,R,$,j,G,N,B,F,X,U,z,Y,_,V,q,J,K,Z,Q,aa,ea,ta,oa,sa,na,ra,ia,ca,la,ha,pa,ua,fa,da,ma,ga,wa,ka,ya,va,ba,Ea,Ia,Ta,Pa,Sa,xa,Aa,Ma,La,Da,Ca,Wa,Oa,Ha,Ra,$a,ja,Ga,Na,Ba,Fa,Xa,Ua,za,Ya,_a,Va,qa,Ja,Ka,Za,Qa,ae,ee,te,oe,se,ne,re,ie,ce,le,he,pe,ue,fe,de,me,ge,we,ke,ye,ve,be,Ee,Ie,Te,Pe,Se,xe,Ae,Me,Le,De,Ce,We,Oe,He,Re,$e,je,Ge,Ne,Be,Fe,Xe,Ue,ze,Ye,_e,Ve,qe,Je,Ke,Ze,Qe,at,et,tt,ot,st,nt,rt,it,ct,lt,ht,pt,ut,ft,dt,mt,gt,wt,kt,yt,vt,bt,Et,It,Tt,Pt,St,xt,At,Mt,Lt,Dt,Ct,Wt,Ot,Ht,Rt,$t,jt,Gt,Nt,Bt,Ft,Xt,Ut,zt,Yt,_t,Vt,qt,Jt,Kt,Zt,Qt,ao,eo,to,oo,so,no,ro,io,co,lo,ho,po,uo,fo,mo,go,wo,ko,yo,vo,bo,Eo,Io,To,Po,So,xo,Ao,Mo,Lo,Do,Co,Wo,Oo,Ho,Ro,$o,jo,Go,No,Bo,Fo,Xo,Uo,zo,Yo,_o,Vo,qo,Jo,Ko,Zo,Qo,as,es,ts,os,ss,ns,rs,is,cs,ls,hs,ps,us,fs,ds,ms,gs,ws,ks,ys,vs,bs,Es,Is,Ts,Ps,Ss,xs,As,Ms,Ls,Ds,Cs,Ws,Os,Hs,Rs,$s,js,Gs,Ns,Bs,Fs,Xs,Us,zs,Ys,_s,Vs,qs,Js,Ks,Zs,Qs,an,en,tn,on,sn,nn,rn,cn,ln,hn,pn,un,fn,dn,mn,gn,wn,kn,yn,vn,bn,En,In,Tn,Pn,Sn,xn,An,Mn,Ln,Dn,Cn,Wn,On,Hn,Rn,$n,jn,Gn,Nn,Bn,Fn,Xn,Un,zn,Yn,_n,Vn,qn,Jn,Kn,Zn,Qn,ar,er,tr,or,sr,nr,rr,ir,cr,lr,hr,pr,ur,fr,dr,mr,gr,wr,kr,yr,vr,br,Er,Ir,Tr,Pr,Sr,xr,Ar,Mr,Lr,Dr,Cr,Wr,Or,Hr,Rr,$r,jr,Gr,Nr,Br,Fr,Xr,Ur,zr,Yr,_r,Vr,qr,Jr,Kr,Zr,Qr,ai,ei,ti,oi,si,ni,ri,ii,ci,li,hi,pi,ui,fi,di,mi,gi,wi,ki,yi,vi,bi,Ei,Ii,Ti,Pi,Si,xi,Ai,Mi,Li,Di,Ci,Wi,Oi,Hi,Ri,$i,ji,Gi,Ni,Bi,Fi,Xi,Ui,zi,Yi,_i,Vi,qi,Ji,Ki,Zi,Qi,ac,ec,tc,oc,sc,nc,rc,ic,cc,lc,hc,pc,uc,fc,dc,mc,gc,wc,kc,yc,vc,bc,Ec,Ic,Tc,Pc,Sc,xc,Ac,Mc,Lc,Dc,Cc,Wc,Oc,Hc,Rc,$c,jc,Gc,Nc,Bc,Fc,Xc,Uc,zc,Yc,_c,Vc,qc,Jc,Kc,Zc,Qc,al,el,tl,ol,sl,nl,rl,il,cl,ll,hl,pl,ul,fl,dl,ml,gl,wl,kl,yl,vl,bl,El,Il,Tl,Pl,Sl,xl,Al,Ml,Ll,Dl,Cl,Wl,Ol,Hl,Rl,$l,jl,Gl,Nl,Bl,Fl,Xl,Ul,zl,Yl,_l,Vl,ql,Jl,Kl,Zl,Ql,ah,eh,th,oh,sh,nh,rh,ih,ch,lh,hh,ph,uh,fh,dh,mh,gh,wh,kh,yh,vh,bh,Eh,Ih,Th,Ph,Sh,xh,Ah,Mh,Lh,Dh,Ch,Wh,Oh,Hh,Rh,$h,jh,Gh,Nh,Bh,Fh,Xh,Uh,zh,Yh,_h,Vh,qh,Jh,Kh,Zh,Qh,ap,ep,tp,op,sp,np,rp,ip,cp,lp,hp;return Oe=new T({props:{date:"27-10-2020",$$slots:{default:[P]},$$scope:{ctx:a}}}),Br=new T({props:{date:"27-10-2020",$$slots:{default:[S]},$$scope:{ctx:a}}}),{c(){e=u("h1"),t=u("a"),o=f("Table of Content"),i=d(),p=u("ul"),I=u("li"),x=u("p"),A=u("a"),M=f("Introduction"),L=d(),D=u("li"),C=u("p"),W=u("a"),O=f("Window Manager"),H=d(),R=u("ul"),$=u("li"),j=u("a"),G=f("DWM (Dynamic Window Manager)"),N=d(),B=u("li"),F=u("a"),X=f("Installation"),U=d(),z=u("li"),Y=u("a"),_=f("Patching"),V=d(),q=u("li"),J=u("a"),K=f("Statusbar"),Z=d(),Q=u("li"),aa=u("p"),ea=u("a"),ta=f("App Launcher"),oa=d(),sa=u("ul"),na=u("li"),ra=u("a"),ia=f("Dmenu"),ca=d(),la=u("li"),ha=u("a"),pa=f("Installation"),ua=d(),fa=u("li"),da=u("a"),ma=f("Patching"),ga=d(),wa=u("li"),ka=u("p"),ya=u("a"),va=f("Terminal"),ba=d(),Ea=u("ul"),Ia=u("li"),Ta=u("a"),Pa=f("ST (Simple Terminal)"),Sa=d(),xa=u("li"),Aa=u("a"),Ma=f("Installation"),La=d(),Da=u("li"),Ca=u("a"),Wa=f("Patching"),Oa=d(),Ha=u("li"),Ra=u("p"),$a=u("a"),ja=f("Tips"),Ga=d(),Na=u("ul"),Ba=u("li"),Fa=u("a"),Xa=f("Handling Rejected Patch"),Ua=d(),za=u("li"),Ya=u("a"),_a=f("Using VCS"),Va=d(),qa=u("li"),Ja=u("a"),Ka=f("Enabling colour emoji support"),Za=d(),Qa=u("li"),ae=u("a"),ee=f("Desktop files"),te=d(),oe=u("li"),se=u("p"),ne=u("a"),re=f("Resources"),ie=d(),ce=u("li"),le=u("p"),he=u("a"),pe=f("Conclusion"),ue=d(),fe=u("h1"),de=u("a"),me=f("Introduction"),ge=d(),we=u("p"),ke=f("Hi! In this post, I’ll go through about my current setup using suckless programs. Some people like suckless software (including me) and some of them hate it, whether if it’s because they don’t like patching stuff, or they don’t like suckless philosophy which they don’t want to exceed a certain number of lines."),ye=d(),ve=u("h1"),be=u("a"),Ee=f("Window Manager"),Ie=d(),Te=u("h2"),Pe=u("a"),Se=f("DWM (Dynamic Window Manager)"),xe=d(),Ae=u("p"),Me=f("Suckless has a window manager called DWM which stands for Dynamic Window Manager. It has less than ~2000 SLOC and to be honest, I don’t really care about the lines of code limit. I just like this Window Manager purely because of its features."),Le=d(),De=u("p"),Ce=f("DWM has 3 layouts by default. They are tiling with master and stack layout, floating, and monocle. One of the reasons I chose DWM is because of the master and stack layout. There are some WM with master and stack layout except DWM, but I don’t like them as much as DWM. For example, I don’t want AwesomeWM because I don’t fancy writing config in Lua."),We=d(),s(Oe.$$.fragment),He=d(),Re=u("p"),$e=f("Another example is Xmonad, that’s an instant big no. It has a ton of Haskell dependencies and its config file is written in Haskell which I never heard of until I found out this WM. I’m not saying that it’s bad, I just don’t want to write Haskell."),je=d(),Ge=u("h2"),Ne=u("a"),Be=f("Installation"),Fe=d(),Xe=u("p"),Ue=f("Suckless way of installing software is compiling it from the source. It’s so easy, you literally need to run 2 commands and then you’re done. I use "),ze=u("a"),Ye=f("DWM 6.2"),_e=d(),Ve=u("p"),qe=f("I always went with the tarball because the git version always gave me a headache when I patch it. To install DWM, you need to "),Je=u("code"),Ke=f("cd"),Ze=f(" into dwm directory and run"),Qe=d(),at=u("pre"),et=d(),tt=u("p"),ot=f("That’s it. DWM is compiled and installed. It only took a couple of seconds on my X220."),st=d(),nt=u("h2"),rt=u("a"),it=f("Patching"),ct=d(),lt=u("p"),ht=f("One of the suckless key features is patching. To add new functionality, you need to patch it your own. I honestly like this concept. They gave you a bare minimum software that you can add some features by patching it on your own."),pt=d(),ut=u("p"),ft=f("I personally use 5 of them and a little bit of tweaking on "),dt=u("code"),mt=f("dwm.c"),gt=f(" file. Here are those patches."),wt=d(),kt=u("ul"),yt=u("li"),vt=u("p"),bt=u("a"),Et=u("strong"),It=f("Actual Fullscreen"),Tt=d(),Pt=u("p"),St=f("As its name suggests, it enables actual fullscreen behaviour instead of toggling the bar off and go to monocle mode."),xt=d(),At=u("li"),Mt=u("p"),Lt=u("a"),Dt=u("strong"),Ct=f("Per Tag"),Wt=d(),Ot=u("p"),Ht=f("This patch enables per tag behaviour which means if you enable floating mode on the first tag, it won’t be applied to another tag. I like this behaviour more than DWM’s default behaviour which applies to all of the available tags."),Rt=d(),$t=u("li"),jt=u("p"),Gt=u("a"),Nt=u("strong"),Bt=f("Status2d"),Ft=d(),Xt=u("p"),Ut=f("This patch gives you a new syntax for statusbar colour. It also capable of drawing rectangles to your statusbar but I personally don’t use it. I only use it for changing my statusbar icon colour."),zt=d(),Yt=u("li"),_t=u("p"),Vt=u("a"),qt=u("strong"),Jt=f("Vanity Gaps"),Kt=d(),Zt=u("p"),Qt=f("The most essential feature of a window manager for me. If a tiling window manager doesn’t have this feature, I won’t use it. It makes me feel less claustrophobic."),ao=d(),eo=u("li"),to=u("p"),oo=u("a"),so=u("strong"),no=f("Swallow Patch"),ro=d(),io=u("p"),co=f("I recently use this patch to fix the usual behaviour when you open a program that spawns another window from terminal, the terminal window doesn’t do anything but it stays there. If you close it, the program will also get killed. This patch allows you to spawn a program from terminal and that program will take the terminal window instead of spawning a new one. If you close the program, your terminal still there."),lo=d(),ho=u("ul"),po=u("li"),uo=u("p"),fo=u("strong"),mo=f("Centered"),go=d(),wo=u("p"),ko=f("I modify the original isCenter patch so I don’t have to define which class that needs to be centered, I just apply it globally. If you interested in how it looks, here it is."),yo=d(),vo=u("pre"),bo=d(),Eo=u("p"),Io=f("Place it inside "),To=u("code"),Po=f("manage(Window w, XWindowAttributes *wa)"),So=f(" function in between of "),xo=u("code"),Ao=f("wc.border_width = c->bw;"),Mo=f(" and "),Lo=u("code"),Do=f("XConfigureWindow(dpy, w, CWBorderWidth, &wc);"),Co=f(", then recompile it. That’s it, you’re done."),Wo=d(),Oo=u("li"),Ho=u("p"),Ro=u("strong"),$o=f("No Monocle Border"),jo=d(),Go=u("p"),No=f("I don’t like any border when in monocle mode so I tried to use no border patch and it doesn’t work, I don’t know why. So I add this code that I found on the internet instead."),Bo=d(),Fo=u("pre"),Xo=d(),Uo=u("p"),zo=f("Add that to "),Yo=u("code"),_o=f("resizeclient(Client *c, int x, int y, int w, int h)"),Vo=f(" function after "),qo=u("code"),Jo=f("wc.border_width = c->bw;"),Ko=f(" then recompile it."),Zo=d(),Qo=u("li"),as=u("p"),es=u("strong"),ts=f("Change Bar Height"),os=d(),ss=u("p"),ns=f("By default, DWM define bar height by calculating font size and adding 2px on top and bottom. It looks ugly to me, I want to be able to define my bar height. So I replaced some code with this."),rs=d(),is=u("pre"),cs=d(),ls=u("p"),hs=f("Those are all of my patches. I tried to make it as minimal as possible but keeping the look and feel that I like. If you don’t know how to apply a patch, here’s an example."),ps=d(),us=u("pre"),fs=d(),ds=u("p"),ms=f("Make sure you’re currently on the DWM directory, otherwise it wouldn’t work. As you can see, applying a patch is simple."),gs=d(),ws=u("h2"),ks=u("a"),ys=f("Statusbar"),vs=d(),bs=u("p"),Es=f("For the status bar itself, I use "),Is=u("a"),Ts=f("DWM Blocks"),Ps=f(" and "),Ss=u("a"),xs=f("Lemonbar"),As=f(". Why do I use 2 status bars you might ask. Well, I’ll explain later because it’s quite a stupid reason."),Ms=d(),Ls=u("p"),Ds=f("I use "),Cs=u("strong"),Ws=f("DWM Blocks"),Os=f(" because it’s able to update each module with different intervals. For example, I update my "),Hs=u("code"),Rs=f("date"),$s=f(" module every 1 minute and I can set my "),js=u("code"),Gs=f("cpu"),Ns=f(" module to update every 2 seconds. All of my modules are written in "),Bs=u("code"),Fs=f("dash"),Xs=f(", a lightweight POSIX shell. You can check all of my modules "),Us=u("a"),zs=f("here"),Ys=f("."),_s=d(),Vs=u("p"),qs=f("Now, the reason I use "),Js=u("strong"),Ks=f("Lemonbar"),Zs=f(" is that I want to draw a bottom border for DWM status bar. It’s stupid, yes I’m fully aware of that. I can’t find any patch to draw a border on DWM statusbar and I’m not familiar with C, so I use this trick instead."),Qs=d(),an=u("p"),en=f("It’s simple, you just need to draw Lemonbar with full width, how many px of height you want, and fill the offsetY matching your DWM statusbar height. Here’s what I did on my autostart."),tn=d(),on=u("pre"),sn=d(),nn=u("p"),rn=f("It’s stupid, but hey, it works. I won’t complain ツ."),cn=d(),ln=u("h1"),hn=u("a"),pn=f("App Launcher"),un=d(),fn=u("h2"),dn=u("a"),mn=f("Dmenu"),gn=d(),wn=u("p"),kn=f("Dmenu is a piece of software to find a program name and execute it. But it’s more than that. Basically, you pipe it some lines then it spits back the line you’ve chosen to stdout. Let me give you an example of that."),yn=d(),vn=u("pre"),bn=d(),En=u("p"),In=f("That simple command is echo-ing "),Tn=u("code"),Pn=f("yes"),Sn=f(" and "),xn=u("code"),An=f("no"),Mn=f(" and piping it to dmenu. It will give you a dmenu prompt that you can type to choose the option or simply move the selection. If you press "),Ln=u("code"),Dn=f("ESC"),Cn=f(", it will close dmenu prompt, but if you select one of them, it will give your selection to stdout which you can then process it however you want."),Wn=d(),On=u("h2"),Hn=u("a"),Rn=f("Installation"),$n=d(),jn=u("p"),Gn=f("Just like any other suckless software, the way you should install it is by compiling it from the source. I use the "),Nn=u("a"),Bn=f("tarball"),Fn=f(" of it. You know the drill, "),Xn=u("code"),Un=f("cd"),zn=f(" to that directory and run"),Yn=d(),_n=u("pre"),Vn=d(),qn=u("p"),Jn=f("Out of the box, it’s very usable already. But, it looks ugly to me. I want to add just 1 patch to make it look a bit better."),Kn=d(),Zn=u("h2"),Qn=u("a"),ar=f("Patching"),er=d(),tr=u("p"),or=f("As I said, I only use 1 patch for dmenu and that patch is…"),sr=d(),nr=u("ul"),rr=u("li"),ir=u("p"),cr=u("a"),lr=u("strong"),hr=f("Lineheight"),pr=f("."),ur=d(),fr=u("p"),dr=f("It gives dmenu the ability to set the line-height by changing the "),mr=u("code"),gr=f("line-height"),wr=f(" variable. I set it to 28 and my font size is 11."),kr=d(),yr=u("pre"),vr=d(),br=u("h1"),Er=u("a"),Ir=f("Terminal"),Tr=d(),Pr=u("h2"),Sr=u("a"),xr=f("ST (Simple Terminal)"),Ar=d(),Mr=u("p"),Lr=f("Suckless have a terminal called "),Dr=u("strong"),Cr=f("ST"),Wr=f(" or "),Or=u("strong"),Hr=f("Simple Terminal"),Rr=f(" or "),$r=u("strong"),jr=f("Suckless Terminal"),Gr=f(". It’s the best terminal in my opinion. It supports true colour, ligatures, box drawing, unicode support, and more stuff that you can achieve by applying some patches."),Nr=d(),s(Br.$$.fragment),Fr=d(),Xr=u("p"),Ur=f("It’s "),zr=u("em"),Yr=f("ultra"),_r=f(" minimal out of the box. You don’t even have a scroll feature builtin. It’s reasonable because not everyone needs a scroll feature. For example, if you use "),Vr=u("strong"),qr=f("tmux"),Jr=f(" then the scroll feature would be redundant."),Kr=d(),Zr=u("h2"),Qr=u("a"),ai=f("Installation"),ei=d(),ti=u("p"),oi=f("As usual, I use the tarball version and it’s currently at v0.8.3 which you can get from "),si=u("a"),ni=f("here"),ri=f(". "),ii=u("code"),ci=f("cd"),li=f(" into that directory and run"),hi=d(),pi=u("pre"),ui=d(),fi=u("p"),di=f("There you have it, a barebone installation of ST. To be honest, I can’t use ST without applying some patches. I need some features that are provided by patches."),mi=d(),gi=u("h2"),wi=u("a"),ki=f("Patching"),yi=d(),vi=u("p"),bi=f("I use quite a lot of patches for ST. Mainly for the appearance. Here’s my list of patches."),Ei=d(),Ii=u("ul"),Ti=u("li"),Pi=u("p"),Si=u("a"),xi=u("strong"),Ai=f("Boxdraw"),Mi=d(),Li=u("p"),Di=f("This patch allows a line to be drawn gapless. I use this so that lines like tmux borders, fzf pop-up border, stuff like gotop, ytop, etc. This patch makes them look "),Ci=u("em"),Wi=f("way"),Oi=f(" better."),Hi=d(),Ri=u("li"),$i=u("p"),ji=u("a"),Gi=u("strong"),Ni=f("Bold is not bright"),Bi=d(),Fi=u("p"),Xi=f("This patch makes bold font the same colour as the regular font. I hate it when bold letters have a different colour than the regular ones."),Ui=d(),zi=u("li"),Yi=u("p"),_i=u("a"),Vi=u("strong"),qi=f("Clipboard"),Ji=d(),Ki=u("p"),Zi=f("This patch makes ST use the same clipboard that the browser uses. I don’t like the default ST behaviour."),Qi=d(),ac=u("li"),ec=u("p"),tc=u("a"),oc=u("strong"),sc=f("Scrollback"),nc=d(),rc=u("p"),ic=f("This patch enables scrolling on "),cc=u("strong"),lc=f("ST"),hc=f(" like most terminal out there. I can’t use ST without this feature because I don’t use "),pc=u("strong"),uc=f("tmux"),fc=f(" that often."),dc=d(),mc=u("li"),gc=u("p"),wc=u("a"),kc=u("strong"),yc=f("Font2"),vc=d(),bc=u("p"),Ec=f("This patch makes ST be able to set a fallback font. For example, I use Iosevka which doesn’t support CJK characters so I use Noto Sans CJK for the fallback to be able to render them properly."),Ic=d(),Tc=u("li"),Pc=u("p"),Sc=u("a"),xc=u("strong"),Ac=f("Ligatures"),Mc=d(),Lc=u("p"),Dc=f("This is my favorite patch out of all of them. I can enjoy those sweet ligatures on ST rather than having to change to Kitty. It’s a bit buggy though if you scroll up the prompt will follow you. It doesn’t bother that much so I ignore that."),Cc=d(),Wc=u("li"),Oc=u("p"),Hc=u("a"),Rc=u("strong"),$c=f("Xresources"),jc=d(),Gc=u("p"),Nc=f("This patch makes ST apply colours from "),Bc=u("code"),Fc=f(".xresources"),Xc=f(". I like this approach rather than changing its "),Uc=u("code"),zc=f("config.h"),Yc=f(" to change the colour scheme."),_c=d(),Vc=u("li"),qc=u("p"),Jc=u("strong"),Kc=f("Palenight Colour Scheme"),Zc=d(),Qc=u("p"),al=f("I change the default colour scheme on my build to Palenight. It’s such a great colour scheme and I love it."),el=d(),tl=u("h1"),ol=u("a"),sl=f("Tips"),nl=d(),rl=u("h2"),il=u("a"),cl=f("Handling Rejected Patch"),ll=d(),hl=u("p"),pl=f("Sometimes when you are patching, the patch has a conflict with another patch. It’s easy to solve actually, it tells you where you have to fix it on the log message. It also gives you a file with a "),ul=u("code"),fl=f(".rej"),dl=f(" suffix that contains all of the rejected changes. Here’s an example of it."),ml=d(),gl=u("pre"),wl=d(),kl=u("p"),yl=f("All you need to do is find some lines that match the surrounding of the line with "),vl=u("code"),bl=f("-"),El=f(" or "),Il=u("code"),Tl=f("+"),Pl=f(" prefix, then replace it according to it. As you can see on the 7th line, there’s a line with "),Sl=u("code"),xl=f("+"),Al=f(" prefix. That means you need to add it to the original file which in this case is "),Ml=u("code"),Ll=f("dwm.c"),Dl=f(". All you have to do is fine that surrounding lines and place it there. If it has a "),Cl=u("code"),Wl=f("-"),Ol=f(" prefix, you need to remove it."),Hl=d(),Rl=u("h2"),$l=u("a"),jl=f("Using VCS"),Gl=d(),Nl=u("p"),Bl=f("I found that using VCS like "),Fl=u("strong"),Xl=f("Git"),Ul=f(" is quite useful if you want to add a patch but don’t want to ruin your current build. Make a new branch of your current build and then patch it, that way you can always go to the other branch if you messed up. If you don’t know how to set up a repo, "),zl=u("a"),Yl=f("this might help"),_l=f(" you getting started."),Vl=d(),ql=u("h2"),Jl=u("a"),Kl=f("Enabling colour emoji support"),Zl=d(),Ql=u("p"),ah=f("By default, suckless software doesn’t support colour emoji like this 👌. You have to remove the code that blocks it and install "),eh=u("code"),th=f("libxft-bgra"),oh=f(". The file is called "),sh=u("code"),nh=f("drw.c"),rh=f(" and the part that you need to remove is"),ih=d(),ch=u("pre"),lh=d(),hh=u("p"),ph=f("After removing that, make sure you got "),uh=u("code"),fh=f("libxft-bgra"),dh=f(" installed. Otherwise, it won’t work."),mh=d(),gh=u("h2"),wh=u("a"),kh=f("Desktop files"),yh=d(),vh=u("p"),bh=f("If you noticed, there’s no .desktop files after installing suckless software. You can either add it yourself or apply a patch for it. I prefer adding it myself. Here’s an example of my "),Eh=u("code"),Ih=f("dwm.desktop"),Th=f(" located on "),Ph=u("code"),Sh=f("/usr/share/xsessions/"),xh=d(),Ah=u("pre"),Mh=d(),Lh=u("p"),Dh=f("I don’t need ST desktop entry since I launch ST using keybind or dmenu which doesn’t need it. If you launch it from "),Ch=u("strong"),Wh=f("Rofi"),Oh=f(" or something like that, you’ll need the desktop entry file."),Hh=d(),Rh=u("h1"),$h=u("a"),jh=f("Resources"),Gh=d(),Nh=u("p"),Bh=f("If you want to get all of my suckless builds, you can get it on my "),Fh=u("a"),Xh=f("Github repo"),Uh=f(" and "),zh=u("a"),Yh=f("here"),_h=f(" are my scripts."),Vh=d(),qh=u("h1"),Jh=u("a"),Kh=f("Conclusion"),Zh=d(),Qh=u("p"),ap=f("I like the suckless software because it works great and I like their way of distributing their stuff. They give you a barebones software that you can add some features through patches. This can get overwhelming since they have "),ep=u("em"),tp=f("a lot"),op=f(" of patches, like "),sp=u("em"),np=f("a lot"),rp=f("."),ip=d(),cp=u("p"),lp=f("All right then, thanks for reading this lengthy post. I hope you learn something new from this. Have a nice day!"),this.h()},l(a){e=m(a,"H1",{id:!0});var s=g(e);t=m(s,"A",{href:!0});var r=g(t);o=w(r,"Table of Content"),r.forEach(k),s.forEach(k),i=y(a),p=m(a,"UL",{});var c=g(p);I=m(c,"LI",{});var l=g(I);x=m(l,"P",{});var h=g(x);A=m(h,"A",{href:!0});var u=g(A);M=w(u,"Introduction"),u.forEach(k),h.forEach(k),l.forEach(k),L=y(c),D=m(c,"LI",{});var f=g(D);C=m(f,"P",{});var d=g(C);W=m(d,"A",{href:!0});var v=g(W);O=w(v,"Window Manager"),v.forEach(k),d.forEach(k),H=y(f),R=m(f,"UL",{});var b=g(R);$=m(b,"LI",{});var E=g($);j=m(E,"A",{href:!0});var T=g(j);G=w(T,"DWM (Dynamic Window Manager)"),T.forEach(k),E.forEach(k),N=y(b),B=m(b,"LI",{});var P=g(B);F=m(P,"A",{href:!0});var S=g(F);X=w(S,"Installation"),S.forEach(k),P.forEach(k),U=y(b),z=m(b,"LI",{});var hp=g(z);Y=m(hp,"A",{href:!0});var pp=g(Y);_=w(pp,"Patching"),pp.forEach(k),hp.forEach(k),V=y(b),q=m(b,"LI",{});var up=g(q);J=m(up,"A",{href:!0});var fp=g(J);K=w(fp,"Statusbar"),fp.forEach(k),up.forEach(k),b.forEach(k),f.forEach(k),Z=y(c),Q=m(c,"LI",{});var dp=g(Q);aa=m(dp,"P",{});var mp=g(aa);ea=m(mp,"A",{href:!0});var gp=g(ea);ta=w(gp,"App Launcher"),gp.forEach(k),mp.forEach(k),oa=y(dp),sa=m(dp,"UL",{});var wp=g(sa);na=m(wp,"LI",{});var kp=g(na);ra=m(kp,"A",{href:!0});var yp=g(ra);ia=w(yp,"Dmenu"),yp.forEach(k),kp.forEach(k),ca=y(wp),la=m(wp,"LI",{});var vp=g(la);ha=m(vp,"A",{href:!0});var bp=g(ha);pa=w(bp,"Installation"),bp.forEach(k),vp.forEach(k),ua=y(wp),fa=m(wp,"LI",{});var Ep=g(fa);da=m(Ep,"A",{href:!0});var Ip=g(da);ma=w(Ip,"Patching"),Ip.forEach(k),Ep.forEach(k),wp.forEach(k),dp.forEach(k),ga=y(c),wa=m(c,"LI",{});var Tp=g(wa);ka=m(Tp,"P",{});var Pp=g(ka);ya=m(Pp,"A",{href:!0});var Sp=g(ya);va=w(Sp,"Terminal"),Sp.forEach(k),Pp.forEach(k),ba=y(Tp),Ea=m(Tp,"UL",{});var xp=g(Ea);Ia=m(xp,"LI",{});var Ap=g(Ia);Ta=m(Ap,"A",{href:!0});var Mp=g(Ta);Pa=w(Mp,"ST (Simple Terminal)"),Mp.forEach(k),Ap.forEach(k),Sa=y(xp),xa=m(xp,"LI",{});var Lp=g(xa);Aa=m(Lp,"A",{href:!0});var Dp=g(Aa);Ma=w(Dp,"Installation"),Dp.forEach(k),Lp.forEach(k),La=y(xp),Da=m(xp,"LI",{});var Cp=g(Da);Ca=m(Cp,"A",{href:!0});var Wp=g(Ca);Wa=w(Wp,"Patching"),Wp.forEach(k),Cp.forEach(k),xp.forEach(k),Tp.forEach(k),Oa=y(c),Ha=m(c,"LI",{});var Op=g(Ha);Ra=m(Op,"P",{});var Hp=g(Ra);$a=m(Hp,"A",{href:!0});var Rp=g($a);ja=w(Rp,"Tips"),Rp.forEach(k),Hp.forEach(k),Ga=y(Op),Na=m(Op,"UL",{});var $p=g(Na);Ba=m($p,"LI",{});var jp=g(Ba);Fa=m(jp,"A",{href:!0});var Gp=g(Fa);Xa=w(Gp,"Handling Rejected Patch"),Gp.forEach(k),jp.forEach(k),Ua=y($p),za=m($p,"LI",{});var Np=g(za);Ya=m(Np,"A",{href:!0});var Bp=g(Ya);_a=w(Bp,"Using VCS"),Bp.forEach(k),Np.forEach(k),Va=y($p),qa=m($p,"LI",{});var Fp=g(qa);Ja=m(Fp,"A",{href:!0});var Xp=g(Ja);Ka=w(Xp,"Enabling colour emoji support"),Xp.forEach(k),Fp.forEach(k),Za=y($p),Qa=m($p,"LI",{});var Up=g(Qa);ae=m(Up,"A",{href:!0});var zp=g(ae);ee=w(zp,"Desktop files"),zp.forEach(k),Up.forEach(k),$p.forEach(k),Op.forEach(k),te=y(c),oe=m(c,"LI",{});var Yp=g(oe);se=m(Yp,"P",{});var _p=g(se);ne=m(_p,"A",{href:!0});var Vp=g(ne);re=w(Vp,"Resources"),Vp.forEach(k),_p.forEach(k),Yp.forEach(k),ie=y(c),ce=m(c,"LI",{});var qp=g(ce);le=m(qp,"P",{});var Jp=g(le);he=m(Jp,"A",{href:!0});var Kp=g(he);pe=w(Kp,"Conclusion"),Kp.forEach(k),Jp.forEach(k),qp.forEach(k),c.forEach(k),ue=y(a),fe=m(a,"H1",{id:!0});var Zp=g(fe);de=m(Zp,"A",{href:!0});var Qp=g(de);me=w(Qp,"Introduction"),Qp.forEach(k),Zp.forEach(k),ge=y(a),we=m(a,"P",{});var au=g(we);ke=w(au,"Hi! In this post, I’ll go through about my current setup using suckless programs. Some people like suckless software (including me) and some of them hate it, whether if it’s because they don’t like patching stuff, or they don’t like suckless philosophy which they don’t want to exceed a certain number of lines."),au.forEach(k),ye=y(a),ve=m(a,"H1",{id:!0});var eu=g(ve);be=m(eu,"A",{href:!0});var tu=g(be);Ee=w(tu,"Window Manager"),tu.forEach(k),eu.forEach(k),Ie=y(a),Te=m(a,"H2",{id:!0});var ou=g(Te);Pe=m(ou,"A",{href:!0});var su=g(Pe);Se=w(su,"DWM (Dynamic Window Manager)"),su.forEach(k),ou.forEach(k),xe=y(a),Ae=m(a,"P",{});var nu=g(Ae);Me=w(nu,"Suckless has a window manager called DWM which stands for Dynamic Window Manager. It has less than ~2000 SLOC and to be honest, I don’t really care about the lines of code limit. I just like this Window Manager purely because of its features."),nu.forEach(k),Le=y(a),De=m(a,"P",{});var ru=g(De);Ce=w(ru,"DWM has 3 layouts by default. They are tiling with master and stack layout, floating, and monocle. One of the reasons I chose DWM is because of the master and stack layout. There are some WM with master and stack layout except DWM, but I don’t like them as much as DWM. For example, I don’t want AwesomeWM because I don’t fancy writing config in Lua."),ru.forEach(k),We=y(a),n(Oe.$$.fragment,a),He=y(a),Re=m(a,"P",{});var iu=g(Re);$e=w(iu,"Another example is Xmonad, that’s an instant big no. It has a ton of Haskell dependencies and its config file is written in Haskell which I never heard of until I found out this WM. I’m not saying that it’s bad, I just don’t want to write Haskell."),iu.forEach(k),je=y(a),Ge=m(a,"H2",{id:!0});var cu=g(Ge);Ne=m(cu,"A",{href:!0});var lu=g(Ne);Be=w(lu,"Installation"),lu.forEach(k),cu.forEach(k),Fe=y(a),Xe=m(a,"P",{});var hu=g(Xe);Ue=w(hu,"Suckless way of installing software is compiling it from the source. It’s so easy, you literally need to run 2 commands and then you’re done. I use "),ze=m(hu,"A",{href:!0,rel:!0});var pu=g(ze);Ye=w(pu,"DWM 6.2"),pu.forEach(k),hu.forEach(k),_e=y(a),Ve=m(a,"P",{});var uu=g(Ve);qe=w(uu,"I always went with the tarball because the git version always gave me a headache when I patch it. To install DWM, you need to "),Je=m(uu,"CODE",{});var fu=g(Je);Ke=w(fu,"cd"),fu.forEach(k),Ze=w(uu," into dwm directory and run"),uu.forEach(k),Qe=y(a),at=m(a,"PRE",{class:!0}),g(at).forEach(k),et=y(a),tt=m(a,"P",{});var du=g(tt);ot=w(du,"That’s it. DWM is compiled and installed. It only took a couple of seconds on my X220."),du.forEach(k),st=y(a),nt=m(a,"H2",{id:!0});var mu=g(nt);rt=m(mu,"A",{href:!0});var gu=g(rt);it=w(gu,"Patching"),gu.forEach(k),mu.forEach(k),ct=y(a),lt=m(a,"P",{});var wu=g(lt);ht=w(wu,"One of the suckless key features is patching. To add new functionality, you need to patch it your own. I honestly like this concept. They gave you a bare minimum software that you can add some features by patching it on your own."),wu.forEach(k),pt=y(a),ut=m(a,"P",{});var ku=g(ut);ft=w(ku,"I personally use 5 of them and a little bit of tweaking on "),dt=m(ku,"CODE",{});var yu=g(dt);mt=w(yu,"dwm.c"),yu.forEach(k),gt=w(ku," file. Here are those patches."),ku.forEach(k),wt=y(a),kt=m(a,"UL",{});var vu=g(kt);yt=m(vu,"LI",{});var bu=g(yt);vt=m(bu,"P",{});var Eu=g(vt);bt=m(Eu,"A",{href:!0,rel:!0});var Iu=g(bt);Et=m(Iu,"STRONG",{});var Tu=g(Et);It=w(Tu,"Actual Fullscreen"),Tu.forEach(k),Iu.forEach(k),Eu.forEach(k),Tt=y(bu),Pt=m(bu,"P",{});var Pu=g(Pt);St=w(Pu,"As its name suggests, it enables actual fullscreen behaviour instead of toggling the bar off and go to monocle mode."),Pu.forEach(k),bu.forEach(k),xt=y(vu),At=m(vu,"LI",{});var Su=g(At);Mt=m(Su,"P",{});var xu=g(Mt);Lt=m(xu,"A",{href:!0,rel:!0});var Au=g(Lt);Dt=m(Au,"STRONG",{});var Mu=g(Dt);Ct=w(Mu,"Per Tag"),Mu.forEach(k),Au.forEach(k),xu.forEach(k),Wt=y(Su),Ot=m(Su,"P",{});var Lu=g(Ot);Ht=w(Lu,"This patch enables per tag behaviour which means if you enable floating mode on the first tag, it won’t be applied to another tag. I like this behaviour more than DWM’s default behaviour which applies to all of the available tags."),Lu.forEach(k),Su.forEach(k),Rt=y(vu),$t=m(vu,"LI",{});var Du=g($t);jt=m(Du,"P",{});var Cu=g(jt);Gt=m(Cu,"A",{href:!0,rel:!0});var Wu=g(Gt);Nt=m(Wu,"STRONG",{});var Ou=g(Nt);Bt=w(Ou,"Status2d"),Ou.forEach(k),Wu.forEach(k),Cu.forEach(k),Ft=y(Du),Xt=m(Du,"P",{});var Hu=g(Xt);Ut=w(Hu,"This patch gives you a new syntax for statusbar colour. It also capable of drawing rectangles to your statusbar but I personally don’t use it. I only use it for changing my statusbar icon colour."),Hu.forEach(k),Du.forEach(k),zt=y(vu),Yt=m(vu,"LI",{});var Ru=g(Yt);_t=m(Ru,"P",{});var $u=g(_t);Vt=m($u,"A",{href:!0,rel:!0});var ju=g(Vt);qt=m(ju,"STRONG",{});var Gu=g(qt);Jt=w(Gu,"Vanity Gaps"),Gu.forEach(k),ju.forEach(k),$u.forEach(k),Kt=y(Ru),Zt=m(Ru,"P",{});var Nu=g(Zt);Qt=w(Nu,"The most essential feature of a window manager for me. If a tiling window manager doesn’t have this feature, I won’t use it. It makes me feel less claustrophobic."),Nu.forEach(k),Ru.forEach(k),ao=y(vu),eo=m(vu,"LI",{});var Bu=g(eo);to=m(Bu,"P",{});var Fu=g(to);oo=m(Fu,"A",{href:!0,rel:!0});var Xu=g(oo);so=m(Xu,"STRONG",{});var Uu=g(so);no=w(Uu,"Swallow Patch"),Uu.forEach(k),Xu.forEach(k),Fu.forEach(k),ro=y(Bu),io=m(Bu,"P",{});var zu=g(io);co=w(zu,"I recently use this patch to fix the usual behaviour when you open a program that spawns another window from terminal, the terminal window doesn’t do anything but it stays there. If you close it, the program will also get killed. This patch allows you to spawn a program from terminal and that program will take the terminal window instead of spawning a new one. If you close the program, your terminal still there."),zu.forEach(k),Bu.forEach(k),vu.forEach(k),lo=y(a),ho=m(a,"UL",{});var Yu=g(ho);po=m(Yu,"LI",{});var _u=g(po);uo=m(_u,"P",{});var Vu=g(uo);fo=m(Vu,"STRONG",{});var qu=g(fo);mo=w(qu,"Centered"),qu.forEach(k),Vu.forEach(k),go=y(_u),wo=m(_u,"P",{});var Ju=g(wo);ko=w(Ju,"I modify the original isCenter patch so I don’t have to define which class that needs to be centered, I just apply it globally. If you interested in how it looks, here it is."),Ju.forEach(k),yo=y(_u),vo=m(_u,"PRE",{class:!0}),g(vo).forEach(k),bo=y(_u),Eo=m(_u,"P",{});var Ku=g(Eo);Io=w(Ku,"Place it inside "),To=m(Ku,"CODE",{});var Zu=g(To);Po=w(Zu,"manage(Window w, XWindowAttributes *wa)"),Zu.forEach(k),So=w(Ku," function in between of "),xo=m(Ku,"CODE",{});var Qu=g(xo);Ao=w(Qu,"wc.border_width = c->bw;"),Qu.forEach(k),Mo=w(Ku," and "),Lo=m(Ku,"CODE",{});var af=g(Lo);Do=w(af,"XConfigureWindow(dpy, w, CWBorderWidth, &wc);"),af.forEach(k),Co=w(Ku,", then recompile it. That’s it, you’re done."),Ku.forEach(k),_u.forEach(k),Wo=y(Yu),Oo=m(Yu,"LI",{});var ef=g(Oo);Ho=m(ef,"P",{});var tf=g(Ho);Ro=m(tf,"STRONG",{});var of=g(Ro);$o=w(of,"No Monocle Border"),of.forEach(k),tf.forEach(k),jo=y(ef),Go=m(ef,"P",{});var sf=g(Go);No=w(sf,"I don’t like any border when in monocle mode so I tried to use no border patch and it doesn’t work, I don’t know why. So I add this code that I found on the internet instead."),sf.forEach(k),Bo=y(ef),Fo=m(ef,"PRE",{class:!0}),g(Fo).forEach(k),Xo=y(ef),Uo=m(ef,"P",{});var nf=g(Uo);zo=w(nf,"Add that to "),Yo=m(nf,"CODE",{});var rf=g(Yo);_o=w(rf,"resizeclient(Client *c, int x, int y, int w, int h)"),rf.forEach(k),Vo=w(nf," function after "),qo=m(nf,"CODE",{});var cf=g(qo);Jo=w(cf,"wc.border_width = c->bw;"),cf.forEach(k),Ko=w(nf," then recompile it."),nf.forEach(k),ef.forEach(k),Zo=y(Yu),Qo=m(Yu,"LI",{});var lf=g(Qo);as=m(lf,"P",{});var hf=g(as);es=m(hf,"STRONG",{});var pf=g(es);ts=w(pf,"Change Bar Height"),pf.forEach(k),hf.forEach(k),os=y(lf),ss=m(lf,"P",{});var uf=g(ss);ns=w(uf,"By default, DWM define bar height by calculating font size and adding 2px on top and bottom. It looks ugly to me, I want to be able to define my bar height. So I replaced some code with this."),uf.forEach(k),rs=y(lf),is=m(lf,"PRE",{class:!0}),g(is).forEach(k),lf.forEach(k),Yu.forEach(k),cs=y(a),ls=m(a,"P",{});var ff=g(ls);hs=w(ff,"Those are all of my patches. I tried to make it as minimal as possible but keeping the look and feel that I like. If you don’t know how to apply a patch, here’s an example."),ff.forEach(k),ps=y(a),us=m(a,"PRE",{class:!0}),g(us).forEach(k),fs=y(a),ds=m(a,"P",{});var df=g(ds);ms=w(df,"Make sure you’re currently on the DWM directory, otherwise it wouldn’t work. As you can see, applying a patch is simple."),df.forEach(k),gs=y(a),ws=m(a,"H2",{id:!0});var mf=g(ws);ks=m(mf,"A",{href:!0});var gf=g(ks);ys=w(gf,"Statusbar"),gf.forEach(k),mf.forEach(k),vs=y(a),bs=m(a,"P",{});var wf=g(bs);Es=w(wf,"For the status bar itself, I use "),Is=m(wf,"A",{href:!0,rel:!0});var kf=g(Is);Ts=w(kf,"DWM Blocks"),kf.forEach(k),Ps=w(wf," and "),Ss=m(wf,"A",{href:!0,rel:!0});var yf=g(Ss);xs=w(yf,"Lemonbar"),yf.forEach(k),As=w(wf,". Why do I use 2 status bars you might ask. Well, I’ll explain later because it’s quite a stupid reason."),wf.forEach(k),Ms=y(a),Ls=m(a,"P",{});var vf=g(Ls);Ds=w(vf,"I use "),Cs=m(vf,"STRONG",{});var bf=g(Cs);Ws=w(bf,"DWM Blocks"),bf.forEach(k),Os=w(vf," because it’s able to update each module with different intervals. For example, I update my "),Hs=m(vf,"CODE",{});var Ef=g(Hs);Rs=w(Ef,"date"),Ef.forEach(k),$s=w(vf," module every 1 minute and I can set my "),js=m(vf,"CODE",{});var If=g(js);Gs=w(If,"cpu"),If.forEach(k),Ns=w(vf," module to update every 2 seconds. All of my modules are written in "),Bs=m(vf,"CODE",{});var Tf=g(Bs);Fs=w(Tf,"dash"),Tf.forEach(k),Xs=w(vf,", a lightweight POSIX shell. You can check all of my modules "),Us=m(vf,"A",{href:!0,rel:!0});var Pf=g(Us);zs=w(Pf,"here"),Pf.forEach(k),Ys=w(vf,"."),vf.forEach(k),_s=y(a),Vs=m(a,"P",{});var Sf=g(Vs);qs=w(Sf,"Now, the reason I use "),Js=m(Sf,"STRONG",{});var xf=g(Js);Ks=w(xf,"Lemonbar"),xf.forEach(k),Zs=w(Sf," is that I want to draw a bottom border for DWM status bar. It’s stupid, yes I’m fully aware of that. I can’t find any patch to draw a border on DWM statusbar and I’m not familiar with C, so I use this trick instead."),Sf.forEach(k),Qs=y(a),an=m(a,"P",{});var Af=g(an);en=w(Af,"It’s simple, you just need to draw Lemonbar with full width, how many px of height you want, and fill the offsetY matching your DWM statusbar height. Here’s what I did on my autostart."),Af.forEach(k),tn=y(a),on=m(a,"PRE",{class:!0}),g(on).forEach(k),sn=y(a),nn=m(a,"P",{});var Mf=g(nn);rn=w(Mf,"It’s stupid, but hey, it works. I won’t complain ツ."),Mf.forEach(k),cn=y(a),ln=m(a,"H1",{id:!0});var Lf=g(ln);hn=m(Lf,"A",{href:!0});var Df=g(hn);pn=w(Df,"App Launcher"),Df.forEach(k),Lf.forEach(k),un=y(a),fn=m(a,"H2",{id:!0});var Cf=g(fn);dn=m(Cf,"A",{href:!0});var Wf=g(dn);mn=w(Wf,"Dmenu"),Wf.forEach(k),Cf.forEach(k),gn=y(a),wn=m(a,"P",{});var Of=g(wn);kn=w(Of,"Dmenu is a piece of software to find a program name and execute it. But it’s more than that. Basically, you pipe it some lines then it spits back the line you’ve chosen to stdout. Let me give you an example of that."),Of.forEach(k),yn=y(a),vn=m(a,"PRE",{class:!0}),g(vn).forEach(k),bn=y(a),En=m(a,"P",{});var Hf=g(En);In=w(Hf,"That simple command is echo-ing "),Tn=m(Hf,"CODE",{});var Rf=g(Tn);Pn=w(Rf,"yes"),Rf.forEach(k),Sn=w(Hf," and "),xn=m(Hf,"CODE",{});var $f=g(xn);An=w($f,"no"),$f.forEach(k),Mn=w(Hf," and piping it to dmenu. It will give you a dmenu prompt that you can type to choose the option or simply move the selection. If you press "),Ln=m(Hf,"CODE",{});var jf=g(Ln);Dn=w(jf,"ESC"),jf.forEach(k),Cn=w(Hf,", it will close dmenu prompt, but if you select one of them, it will give your selection to stdout which you can then process it however you want."),Hf.forEach(k),Wn=y(a),On=m(a,"H2",{id:!0});var Gf=g(On);Hn=m(Gf,"A",{href:!0});var Nf=g(Hn);Rn=w(Nf,"Installation"),Nf.forEach(k),Gf.forEach(k),$n=y(a),jn=m(a,"P",{});var Bf=g(jn);Gn=w(Bf,"Just like any other suckless software, the way you should install it is by compiling it from the source. I use the "),Nn=m(Bf,"A",{href:!0,rel:!0});var Ff=g(Nn);Bn=w(Ff,"tarball"),Ff.forEach(k),Fn=w(Bf," of it. You know the drill, "),Xn=m(Bf,"CODE",{});var Xf=g(Xn);Un=w(Xf,"cd"),Xf.forEach(k),zn=w(Bf," to that directory and run"),Bf.forEach(k),Yn=y(a),_n=m(a,"PRE",{class:!0}),g(_n).forEach(k),Vn=y(a),qn=m(a,"P",{});var Uf=g(qn);Jn=w(Uf,"Out of the box, it’s very usable already. But, it looks ugly to me. I want to add just 1 patch to make it look a bit better."),Uf.forEach(k),Kn=y(a),Zn=m(a,"H2",{id:!0});var zf=g(Zn);Qn=m(zf,"A",{href:!0});var Yf=g(Qn);ar=w(Yf,"Patching"),Yf.forEach(k),zf.forEach(k),er=y(a),tr=m(a,"P",{});var _f=g(tr);or=w(_f,"As I said, I only use 1 patch for dmenu and that patch is…"),_f.forEach(k),sr=y(a),nr=m(a,"UL",{});var Vf=g(nr);rr=m(Vf,"LI",{});var qf=g(rr);ir=m(qf,"P",{});var Jf=g(ir);cr=m(Jf,"A",{href:!0,rel:!0});var Kf=g(cr);lr=m(Kf,"STRONG",{});var Zf=g(lr);hr=w(Zf,"Lineheight"),Zf.forEach(k),Kf.forEach(k),pr=w(Jf,"."),Jf.forEach(k),ur=y(qf),fr=m(qf,"P",{});var Qf=g(fr);dr=w(Qf,"It gives dmenu the ability to set the line-height by changing the "),mr=m(Qf,"CODE",{});var ad=g(mr);gr=w(ad,"line-height"),ad.forEach(k),wr=w(Qf," variable. I set it to 28 and my font size is 11."),Qf.forEach(k),kr=y(qf),yr=m(qf,"PRE",{class:!0}),g(yr).forEach(k),qf.forEach(k),Vf.forEach(k),vr=y(a),br=m(a,"H1",{id:!0});var ed=g(br);Er=m(ed,"A",{href:!0});var td=g(Er);Ir=w(td,"Terminal"),td.forEach(k),ed.forEach(k),Tr=y(a),Pr=m(a,"H2",{id:!0});var od=g(Pr);Sr=m(od,"A",{href:!0});var sd=g(Sr);xr=w(sd,"ST (Simple Terminal)"),sd.forEach(k),od.forEach(k),Ar=y(a),Mr=m(a,"P",{});var nd=g(Mr);Lr=w(nd,"Suckless have a terminal called "),Dr=m(nd,"STRONG",{});var rd=g(Dr);Cr=w(rd,"ST"),rd.forEach(k),Wr=w(nd," or "),Or=m(nd,"STRONG",{});var id=g(Or);Hr=w(id,"Simple Terminal"),id.forEach(k),Rr=w(nd," or "),$r=m(nd,"STRONG",{});var cd=g($r);jr=w(cd,"Suckless Terminal"),cd.forEach(k),Gr=w(nd,". It’s the best terminal in my opinion. It supports true colour, ligatures, box drawing, unicode support, and more stuff that you can achieve by applying some patches."),nd.forEach(k),Nr=y(a),n(Br.$$.fragment,a),Fr=y(a),Xr=m(a,"P",{});var ld=g(Xr);Ur=w(ld,"It’s "),zr=m(ld,"EM",{});var hd=g(zr);Yr=w(hd,"ultra"),hd.forEach(k),_r=w(ld," minimal out of the box. You don’t even have a scroll feature builtin. It’s reasonable because not everyone needs a scroll feature. For example, if you use "),Vr=m(ld,"STRONG",{});var pd=g(Vr);qr=w(pd,"tmux"),pd.forEach(k),Jr=w(ld," then the scroll feature would be redundant."),ld.forEach(k),Kr=y(a),Zr=m(a,"H2",{id:!0});var ud=g(Zr);Qr=m(ud,"A",{href:!0});var fd=g(Qr);ai=w(fd,"Installation"),fd.forEach(k),ud.forEach(k),ei=y(a),ti=m(a,"P",{});var dd=g(ti);oi=w(dd,"As usual, I use the tarball version and it’s currently at v0.8.3 which you can get from "),si=m(dd,"A",{href:!0,rel:!0});var md=g(si);ni=w(md,"here"),md.forEach(k),ri=w(dd,". "),ii=m(dd,"CODE",{});var gd=g(ii);ci=w(gd,"cd"),gd.forEach(k),li=w(dd," into that directory and run"),dd.forEach(k),hi=y(a),pi=m(a,"PRE",{class:!0}),g(pi).forEach(k),ui=y(a),fi=m(a,"P",{});var wd=g(fi);di=w(wd,"There you have it, a barebone installation of ST. To be honest, I can’t use ST without applying some patches. I need some features that are provided by patches."),wd.forEach(k),mi=y(a),gi=m(a,"H2",{id:!0});var kd=g(gi);wi=m(kd,"A",{href:!0});var yd=g(wi);ki=w(yd,"Patching"),yd.forEach(k),kd.forEach(k),yi=y(a),vi=m(a,"P",{});var vd=g(vi);bi=w(vd,"I use quite a lot of patches for ST. Mainly for the appearance. Here’s my list of patches."),vd.forEach(k),Ei=y(a),Ii=m(a,"UL",{});var bd=g(Ii);Ti=m(bd,"LI",{});var Ed=g(Ti);Pi=m(Ed,"P",{});var Id=g(Pi);Si=m(Id,"A",{href:!0,rel:!0});var Td=g(Si);xi=m(Td,"STRONG",{});var Pd=g(xi);Ai=w(Pd,"Boxdraw"),Pd.forEach(k),Td.forEach(k),Id.forEach(k),Mi=y(Ed),Li=m(Ed,"P",{});var Sd=g(Li);Di=w(Sd,"This patch allows a line to be drawn gapless. I use this so that lines like tmux borders, fzf pop-up border, stuff like gotop, ytop, etc. This patch makes them look "),Ci=m(Sd,"EM",{});var xd=g(Ci);Wi=w(xd,"way"),xd.forEach(k),Oi=w(Sd," better."),Sd.forEach(k),Ed.forEach(k),Hi=y(bd),Ri=m(bd,"LI",{});var Ad=g(Ri);$i=m(Ad,"P",{});var Md=g($i);ji=m(Md,"A",{href:!0,rel:!0});var Ld=g(ji);Gi=m(Ld,"STRONG",{});var Dd=g(Gi);Ni=w(Dd,"Bold is not bright"),Dd.forEach(k),Ld.forEach(k),Md.forEach(k),Bi=y(Ad),Fi=m(Ad,"P",{});var Cd=g(Fi);Xi=w(Cd,"This patch makes bold font the same colour as the regular font. I hate it when bold letters have a different colour than the regular ones."),Cd.forEach(k),Ad.forEach(k),Ui=y(bd),zi=m(bd,"LI",{});var Wd=g(zi);Yi=m(Wd,"P",{});var Od=g(Yi);_i=m(Od,"A",{href:!0,rel:!0});var Hd=g(_i);Vi=m(Hd,"STRONG",{});var Rd=g(Vi);qi=w(Rd,"Clipboard"),Rd.forEach(k),Hd.forEach(k),Od.forEach(k),Ji=y(Wd),Ki=m(Wd,"P",{});var $d=g(Ki);Zi=w($d,"This patch makes ST use the same clipboard that the browser uses. I don’t like the default ST behaviour."),$d.forEach(k),Wd.forEach(k),Qi=y(bd),ac=m(bd,"LI",{});var jd=g(ac);ec=m(jd,"P",{});var Gd=g(ec);tc=m(Gd,"A",{href:!0,rel:!0});var Nd=g(tc);oc=m(Nd,"STRONG",{});var Bd=g(oc);sc=w(Bd,"Scrollback"),Bd.forEach(k),Nd.forEach(k),Gd.forEach(k),nc=y(jd),rc=m(jd,"P",{});var Fd=g(rc);ic=w(Fd,"This patch enables scrolling on "),cc=m(Fd,"STRONG",{});var Xd=g(cc);lc=w(Xd,"ST"),Xd.forEach(k),hc=w(Fd," like most terminal out there. I can’t use ST without this feature because I don’t use "),pc=m(Fd,"STRONG",{});var Ud=g(pc);uc=w(Ud,"tmux"),Ud.forEach(k),fc=w(Fd," that often."),Fd.forEach(k),jd.forEach(k),dc=y(bd),mc=m(bd,"LI",{});var zd=g(mc);gc=m(zd,"P",{});var Yd=g(gc);wc=m(Yd,"A",{href:!0,rel:!0});var _d=g(wc);kc=m(_d,"STRONG",{});var Vd=g(kc);yc=w(Vd,"Font2"),Vd.forEach(k),_d.forEach(k),Yd.forEach(k),vc=y(zd),bc=m(zd,"P",{});var qd=g(bc);Ec=w(qd,"This patch makes ST be able to set a fallback font. For example, I use Iosevka which doesn’t support CJK characters so I use Noto Sans CJK for the fallback to be able to render them properly."),qd.forEach(k),zd.forEach(k),Ic=y(bd),Tc=m(bd,"LI",{});var Jd=g(Tc);Pc=m(Jd,"P",{});var Kd=g(Pc);Sc=m(Kd,"A",{href:!0,rel:!0});var Zd=g(Sc);xc=m(Zd,"STRONG",{});var Qd=g(xc);Ac=w(Qd,"Ligatures"),Qd.forEach(k),Zd.forEach(k),Kd.forEach(k),Mc=y(Jd),Lc=m(Jd,"P",{});var am=g(Lc);Dc=w(am,"This is my favorite patch out of all of them. I can enjoy those sweet ligatures on ST rather than having to change to Kitty. It’s a bit buggy though if you scroll up the prompt will follow you. It doesn’t bother that much so I ignore that."),am.forEach(k),Jd.forEach(k),Cc=y(bd),Wc=m(bd,"LI",{});var em=g(Wc);Oc=m(em,"P",{});var tm=g(Oc);Hc=m(tm,"A",{href:!0,rel:!0});var om=g(Hc);Rc=m(om,"STRONG",{});var sm=g(Rc);$c=w(sm,"Xresources"),sm.forEach(k),om.forEach(k),tm.forEach(k),jc=y(em),Gc=m(em,"P",{});var nm=g(Gc);Nc=w(nm,"This patch makes ST apply colours from "),Bc=m(nm,"CODE",{});var rm=g(Bc);Fc=w(rm,".xresources"),rm.forEach(k),Xc=w(nm,". I like this approach rather than changing its "),Uc=m(nm,"CODE",{});var im=g(Uc);zc=w(im,"config.h"),im.forEach(k),Yc=w(nm," to change the colour scheme."),nm.forEach(k),em.forEach(k),_c=y(bd),Vc=m(bd,"LI",{});var cm=g(Vc);qc=m(cm,"P",{});var lm=g(qc);Jc=m(lm,"STRONG",{});var hm=g(Jc);Kc=w(hm,"Palenight Colour Scheme"),hm.forEach(k),lm.forEach(k),Zc=y(cm),Qc=m(cm,"P",{});var pm=g(Qc);al=w(pm,"I change the default colour scheme on my build to Palenight. It’s such a great colour scheme and I love it."),pm.forEach(k),cm.forEach(k),bd.forEach(k),el=y(a),tl=m(a,"H1",{id:!0});var um=g(tl);ol=m(um,"A",{href:!0});var fm=g(ol);sl=w(fm,"Tips"),fm.forEach(k),um.forEach(k),nl=y(a),rl=m(a,"H2",{id:!0});var dm=g(rl);il=m(dm,"A",{href:!0});var mm=g(il);cl=w(mm,"Handling Rejected Patch"),mm.forEach(k),dm.forEach(k),ll=y(a),hl=m(a,"P",{});var gm=g(hl);pl=w(gm,"Sometimes when you are patching, the patch has a conflict with another patch. It’s easy to solve actually, it tells you where you have to fix it on the log message. It also gives you a file with a "),ul=m(gm,"CODE",{});var wm=g(ul);fl=w(wm,".rej"),wm.forEach(k),dl=w(gm," suffix that contains all of the rejected changes. Here’s an example of it."),gm.forEach(k),ml=y(a),gl=m(a,"PRE",{class:!0}),g(gl).forEach(k),wl=y(a),kl=m(a,"P",{});var km=g(kl);yl=w(km,"All you need to do is find some lines that match the surrounding of the line with "),vl=m(km,"CODE",{});var ym=g(vl);bl=w(ym,"-"),ym.forEach(k),El=w(km," or "),Il=m(km,"CODE",{});var vm=g(Il);Tl=w(vm,"+"),vm.forEach(k),Pl=w(km," prefix, then replace it according to it. As you can see on the 7th line, there’s a line with "),Sl=m(km,"CODE",{});var bm=g(Sl);xl=w(bm,"+"),bm.forEach(k),Al=w(km," prefix. That means you need to add it to the original file which in this case is "),Ml=m(km,"CODE",{});var Em=g(Ml);Ll=w(Em,"dwm.c"),Em.forEach(k),Dl=w(km,". All you have to do is fine that surrounding lines and place it there. If it has a "),Cl=m(km,"CODE",{});var Im=g(Cl);Wl=w(Im,"-"),Im.forEach(k),Ol=w(km," prefix, you need to remove it."),km.forEach(k),Hl=y(a),Rl=m(a,"H2",{id:!0});var Tm=g(Rl);$l=m(Tm,"A",{href:!0});var Pm=g($l);jl=w(Pm,"Using VCS"),Pm.forEach(k),Tm.forEach(k),Gl=y(a),Nl=m(a,"P",{});var Sm=g(Nl);Bl=w(Sm,"I found that using VCS like "),Fl=m(Sm,"STRONG",{});var xm=g(Fl);Xl=w(xm,"Git"),xm.forEach(k),Ul=w(Sm," is quite useful if you want to add a patch but don’t want to ruin your current build. Make a new branch of your current build and then patch it, that way you can always go to the other branch if you messed up. If you don’t know how to set up a repo, "),zl=m(Sm,"A",{href:!0,rel:!0});var Am=g(zl);Yl=w(Am,"this might help"),Am.forEach(k),_l=w(Sm," you getting started."),Sm.forEach(k),Vl=y(a),ql=m(a,"H2",{id:!0});var Mm=g(ql);Jl=m(Mm,"A",{href:!0});var Lm=g(Jl);Kl=w(Lm,"Enabling colour emoji support"),Lm.forEach(k),Mm.forEach(k),Zl=y(a),Ql=m(a,"P",{});var Dm=g(Ql);ah=w(Dm,"By default, suckless software doesn’t support colour emoji like this 👌. You have to remove the code that blocks it and install "),eh=m(Dm,"CODE",{});var Cm=g(eh);th=w(Cm,"libxft-bgra"),Cm.forEach(k),oh=w(Dm,". The file is called "),sh=m(Dm,"CODE",{});var Wm=g(sh);nh=w(Wm,"drw.c"),Wm.forEach(k),rh=w(Dm," and the part that you need to remove is"),Dm.forEach(k),ih=y(a),ch=m(a,"PRE",{class:!0}),g(ch).forEach(k),lh=y(a),hh=m(a,"P",{});var Om=g(hh);ph=w(Om,"After removing that, make sure you got "),uh=m(Om,"CODE",{});var Hm=g(uh);fh=w(Hm,"libxft-bgra"),Hm.forEach(k),dh=w(Om," installed. Otherwise, it won’t work."),Om.forEach(k),mh=y(a),gh=m(a,"H2",{id:!0});var Rm=g(gh);wh=m(Rm,"A",{href:!0});var $m=g(wh);kh=w($m,"Desktop files"),$m.forEach(k),Rm.forEach(k),yh=y(a),vh=m(a,"P",{});var jm=g(vh);bh=w(jm,"If you noticed, there’s no .desktop files after installing suckless software. You can either add it yourself or apply a patch for it. I prefer adding it myself. Here’s an example of my "),Eh=m(jm,"CODE",{});var Gm=g(Eh);Ih=w(Gm,"dwm.desktop"),Gm.forEach(k),Th=w(jm," located on "),Ph=m(jm,"CODE",{});var Nm=g(Ph);Sh=w(Nm,"/usr/share/xsessions/"),Nm.forEach(k),jm.forEach(k),xh=y(a),Ah=m(a,"PRE",{class:!0}),g(Ah).forEach(k),Mh=y(a),Lh=m(a,"P",{});var Bm=g(Lh);Dh=w(Bm,"I don’t need ST desktop entry since I launch ST using keybind or dmenu which doesn’t need it. If you launch it from "),Ch=m(Bm,"STRONG",{});var Fm=g(Ch);Wh=w(Fm,"Rofi"),Fm.forEach(k),Oh=w(Bm," or something like that, you’ll need the desktop entry file."),Bm.forEach(k),Hh=y(a),Rh=m(a,"H1",{id:!0});var Xm=g(Rh);$h=m(Xm,"A",{href:!0});var Um=g($h);jh=w(Um,"Resources"),Um.forEach(k),Xm.forEach(k),Gh=y(a),Nh=m(a,"P",{});var zm=g(Nh);Bh=w(zm,"If you want to get all of my suckless builds, you can get it on my "),Fh=m(zm,"A",{href:!0,rel:!0});var Ym=g(Fh);Xh=w(Ym,"Github repo"),Ym.forEach(k),Uh=w(zm," and "),zh=m(zm,"A",{href:!0,rel:!0});var _m=g(zh);Yh=w(_m,"here"),_m.forEach(k),_h=w(zm," are my scripts."),zm.forEach(k),Vh=y(a),qh=m(a,"H1",{id:!0});var Vm=g(qh);Jh=m(Vm,"A",{href:!0});var qm=g(Jh);Kh=w(qm,"Conclusion"),qm.forEach(k),Vm.forEach(k),Zh=y(a),Qh=m(a,"P",{});var Jm=g(Qh);ap=w(Jm,"I like the suckless software because it works great and I like their way of distributing their stuff. They give you a barebones software that you can add some features through patches. This can get overwhelming since they have "),ep=m(Jm,"EM",{});var Km=g(ep);tp=w(Km,"a lot"),Km.forEach(k),op=w(Jm," of patches, like "),sp=m(Jm,"EM",{});var Zm=g(sp);np=w(Zm,"a lot"),Zm.forEach(k),rp=w(Jm,"."),Jm.forEach(k),ip=y(a),cp=m(a,"P",{});var Qm=g(cp);lp=w(Qm,"All right then, thanks for reading this lengthy post. I hope you learn something new from this. Have a nice day!"),Qm.forEach(k),this.h()},h(){v(t,"href","#table-of-content"),v(e,"id","table-of-content"),v(A,"href","#introduction"),v(W,"href","#window-manager"),v(j,"href","#dwm-dynamic-window-manager"),v(F,"href","#installation"),v(Y,"href","#patching"),v(J,"href","#statusbar"),v(ea,"href","#app-launcher"),v(ra,"href","#dmenu"),v(ha,"href","#installation-1"),v(da,"href","#patching-1"),v(ya,"href","#terminal"),v(Ta,"href","#st-simple-terminal"),v(Aa,"href","#installation-2"),v(Ca,"href","#patching-2"),v($a,"href","#tips"),v(Fa,"href","#handling-rejected-patch"),v(Ya,"href","#using-vcs"),v(Ja,"href","#enabling-colour-emoji-support"),v(ae,"href","#desktop-files"),v(ne,"href","#resources"),v(he,"href","#conclusion"),v(de,"href","#introduction"),v(fe,"id","introduction"),v(be,"href","#window-manager"),v(ve,"id","window-manager"),v(Pe,"href","#dwm-dynamic-window-manager"),v(Te,"id","dwm-dynamic-window-manager"),v(Ne,"href","#installation"),v(Ge,"id","installation"),v(ze,"href","https://dl.suckless.org/dwm/dwm-6.2.tar.gz"),v(ze,"rel","nofollow"),v(at,"class","language-bash"),v(rt,"href","#patching"),v(nt,"id","patching"),v(bt,"href","https://dwm.suckless.org/patches/actualfullscreen/"),v(bt,"rel","nofollow"),v(Lt,"href","https://dwm.suckless.org/patches/pertag/"),v(Lt,"rel","nofollow"),v(Gt,"href","https://dwm.suckless.org/patches/status2d/"),v(Gt,"rel","nofollow"),v(Vt,"href","https://dwm.suckless.org/patches/vanitygaps/"),v(Vt,"rel","nofollow"),v(oo,"href","https://dwm.suckless.org/patches/swallow/"),v(oo,"rel","nofollow"),v(vo,"class","language-cpp"),v(Fo,"class","language-cpp"),v(is,"class","language-cpp"),v(us,"class","language-bash"),v(ks,"href","#statusbar"),v(ws,"id","statusbar"),v(Is,"href","https://github.com/torrinfail/dwmblocks"),v(Is,"rel","nofollow"),v(Ss,"href","https://github.com/expectocode/bar"),v(Ss,"rel","nofollow"),v(Us,"href","https://github.com/elianiva/dotfiles/tree/master/scripts/.scripts/statusbar"),v(Us,"rel","nofollow"),v(on,"class","language-bash"),v(hn,"href","#app-launcher"),v(ln,"id","app-launcher"),v(dn,"href","#dmenu"),v(fn,"id","dmenu"),v(vn,"class","language-bash"),v(Hn,"href","#installation-1"),v(On,"id","installation-1"),v(Nn,"href","https://dl.suckless.org/tools/dmenu-4.9.tar.gz"),v(Nn,"rel","nofollow"),v(_n,"class","language-bash"),v(Qn,"href","#patching-1"),v(Zn,"id","patching-1"),v(cr,"href","https://tools.suckless.org/dmenu/patches/line-height/"),v(cr,"rel","nofollow"),v(yr,"class","language-c"),v(Er,"href","#terminal"),v(br,"id","terminal"),v(Sr,"href","#st-simple-terminal"),v(Pr,"id","st-simple-terminal"),v(Qr,"href","#installation-2"),v(Zr,"id","installation-2"),v(si,"href","https://dl.suckless.org/st/st-0.8.3.tar.gz"),v(si,"rel","nofollow"),v(pi,"class","language-bash"),v(wi,"href","#patching-2"),v(gi,"id","patching-2"),v(Si,"href","https://st.suckless.org/patches/boxdraw"),v(Si,"rel","nofollow"),v(ji,"href","https://st.suckless.org/patches/bold-is-not-bright/"),v(ji,"rel","nofollow"),v(_i,"href","https://st.suckless.org/patches/clipboard"),v(_i,"rel","nofollow"),v(tc,"href","https://st.suckless.org/patches/scrollback/"),v(tc,"rel","nofollow"),v(wc,"href","https://st.suckless.org/patches/font2/"),v(wc,"rel","nofollow"),v(Sc,"href","https://st.suckless.org/patches/ligatures/"),v(Sc,"rel","nofollow"),v(Hc,"href","https://st.suckless.org/patches/xresources/"),v(Hc,"rel","nofollow"),v(ol,"href","#tips"),v(tl,"id","tips"),v(il,"href","#handling-rejected-patch"),v(rl,"id","handling-rejected-patch"),v(gl,"class","language-diff"),v($l,"href","#using-vcs"),v(Rl,"id","using-vcs"),v(zl,"href","https://opensource.com/article/18/1/step-step-guide-git"),v(zl,"rel","nofollow"),v(Jl,"href","#enabling-colour-emoji-support"),v(ql,"id","enabling-colour-emoji-support"),v(ch,"class","language-c"),v(wh,"href","#desktop-files"),v(gh,"id","desktop-files"),v(Ah,"class","language-null"),v($h,"href","#resources"),v(Rh,"id","resources"),v(Fh,"href","https://github.com/elianiva/suckless/"),v(Fh,"rel","nofollow"),v(zh,"href","https://github.com/elianiva/dotfiles/blob/master/scripts/.scripts/"),v(zh,"rel","nofollow"),v(Jh,"href","#conclusion"),v(qh,"id","conclusion")},m(a,s){b(a,e,s),E(e,t),E(t,o),b(a,i,s),b(a,p,s),E(p,I),E(I,x),E(x,A),E(A,M),E(p,L),E(p,D),E(D,C),E(C,W),E(W,O),E(D,H),E(D,R),E(R,$),E($,j),E(j,G),E(R,N),E(R,B),E(B,F),E(F,X),E(R,U),E(R,z),E(z,Y),E(Y,_),E(R,V),E(R,q),E(q,J),E(J,K),E(p,Z),E(p,Q),E(Q,aa),E(aa,ea),E(ea,ta),E(Q,oa),E(Q,sa),E(sa,na),E(na,ra),E(ra,ia),E(sa,ca),E(sa,la),E(la,ha),E(ha,pa),E(sa,ua),E(sa,fa),E(fa,da),E(da,ma),E(p,ga),E(p,wa),E(wa,ka),E(ka,ya),E(ya,va),E(wa,ba),E(wa,Ea),E(Ea,Ia),E(Ia,Ta),E(Ta,Pa),E(Ea,Sa),E(Ea,xa),E(xa,Aa),E(Aa,Ma),E(Ea,La),E(Ea,Da),E(Da,Ca),E(Ca,Wa),E(p,Oa),E(p,Ha),E(Ha,Ra),E(Ra,$a),E($a,ja),E(Ha,Ga),E(Ha,Na),E(Na,Ba),E(Ba,Fa),E(Fa,Xa),E(Na,Ua),E(Na,za),E(za,Ya),E(Ya,_a),E(Na,Va),E(Na,qa),E(qa,Ja),E(Ja,Ka),E(Na,Za),E(Na,Qa),E(Qa,ae),E(ae,ee),E(p,te),E(p,oe),E(oe,se),E(se,ne),E(ne,re),E(p,ie),E(p,ce),E(ce,le),E(le,he),E(he,pe),b(a,ue,s),b(a,fe,s),E(fe,de),E(de,me),b(a,ge,s),b(a,we,s),E(we,ke),b(a,ye,s),b(a,ve,s),E(ve,be),E(be,Ee),b(a,Ie,s),b(a,Te,s),E(Te,Pe),E(Pe,Se),b(a,xe,s),b(a,Ae,s),E(Ae,Me),b(a,Le,s),b(a,De,s),E(De,Ce),b(a,We,s),r(Oe,a,s),b(a,He,s),b(a,Re,s),E(Re,$e),b(a,je,s),b(a,Ge,s),E(Ge,Ne),E(Ne,Be),b(a,Fe,s),b(a,Xe,s),E(Xe,Ue),E(Xe,ze),E(ze,Ye),b(a,_e,s),b(a,Ve,s),E(Ve,qe),E(Ve,Je),E(Je,Ke),E(Ve,Ze),b(a,Qe,s),b(a,at,s),at.innerHTML='<code class="language-bash">$ <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span></code>',b(a,et,s),b(a,tt,s),E(tt,ot),b(a,st,s),b(a,nt,s),E(nt,rt),E(rt,it),b(a,ct,s),b(a,lt,s),E(lt,ht),b(a,pt,s),b(a,ut,s),E(ut,ft),E(ut,dt),E(dt,mt),E(ut,gt),b(a,wt,s),b(a,kt,s),E(kt,yt),E(yt,vt),E(vt,bt),E(bt,Et),E(Et,It),E(yt,Tt),E(yt,Pt),E(Pt,St),E(kt,xt),E(kt,At),E(At,Mt),E(Mt,Lt),E(Lt,Dt),E(Dt,Ct),E(At,Wt),E(At,Ot),E(Ot,Ht),E(kt,Rt),E(kt,$t),E($t,jt),E(jt,Gt),E(Gt,Nt),E(Nt,Bt),E($t,Ft),E($t,Xt),E(Xt,Ut),E(kt,zt),E(kt,Yt),E(Yt,_t),E(_t,Vt),E(Vt,qt),E(qt,Jt),E(Yt,Kt),E(Yt,Zt),E(Zt,Qt),E(kt,ao),E(kt,eo),E(eo,to),E(to,oo),E(oo,so),E(so,no),E(eo,ro),E(eo,io),E(io,co),b(a,lo,s),b(a,ho,s),E(ho,po),E(po,uo),E(uo,fo),E(fo,mo),E(po,go),E(po,wo),E(wo,ko),E(po,yo),E(po,vo),vo.innerHTML='<code class="language-cpp"><span class="token comment">// center floating window</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token operator">-></span>x <span class="token operator">==</span> selmon<span class="token operator">-></span>wx<span class="token punctuation">)</span> c<span class="token operator">-></span>x <span class="token operator">+=</span> <span class="token punctuation">(</span>c<span class="token operator">-></span>mon<span class="token operator">-></span>ww <span class="token operator">-</span> <span class="token function">WIDTH</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> c<span class="token operator">-></span>bw<span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token operator">-></span>y <span class="token operator">==</span> selmon<span class="token operator">-></span>wy<span class="token punctuation">)</span> c<span class="token operator">-></span>y <span class="token operator">+=</span> <span class="token punctuation">(</span>c<span class="token operator">-></span>mon<span class="token operator">-></span>wh <span class="token operator">-</span> <span class="token function">HEIGHT</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> c<span class="token operator">-></span>bw<span class="token punctuation">;</span></code>',E(po,bo),E(po,Eo),E(Eo,Io),E(Eo,To),E(To,Po),E(Eo,So),E(Eo,xo),E(xo,Ao),E(Eo,Mo),E(Eo,Lo),E(Lo,Do),E(Eo,Co),E(ho,Wo),E(ho,Oo),E(Oo,Ho),E(Ho,Ro),E(Ro,$o),E(Oo,jo),E(Oo,Go),E(Go,No),E(Oo,Bo),E(Oo,Fo),Fo.innerHTML='<code class="language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>monocle <span class="token operator">==</span> c<span class="token operator">-></span>mon<span class="token operator">-></span>lt<span class="token punctuation">[</span>c<span class="token operator">-></span>mon<span class="token operator">-></span>sellt<span class="token punctuation">]</span><span class="token operator">-></span>arrange<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token operator">-></span>isfloating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      wc<span class="token punctuation">.</span>border_width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      c<span class="token operator">-></span>w <span class="token operator">=</span> wc<span class="token punctuation">.</span>width <span class="token operator">+=</span> c<span class="token operator">-></span>bw <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      c<span class="token operator">-></span>h <span class="token operator">=</span> wc<span class="token punctuation">.</span>height <span class="token operator">+=</span> c<span class="token operator">-></span>bw <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span></code>',E(Oo,Xo),E(Oo,Uo),E(Uo,zo),E(Uo,Yo),E(Yo,_o),E(Uo,Vo),E(Uo,qo),E(qo,Jo),E(Uo,Ko),E(ho,Zo),E(ho,Qo),E(Qo,as),E(as,es),E(es,ts),E(Qo,os),E(Qo,ss),E(ss,ns),E(Qo,rs),E(Qo,is),is.innerHTML='<code class="language-cpp"><span class="token comment">// previous</span>\nbh <span class="token operator">=</span> drw<span class="token operator">-></span>fonts<span class="token operator">-></span>h <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token comment">// new</span>\nbh <span class="token operator">=</span> user_bh <span class="token operator">?</span> user_bh <span class="token operator">:</span> drw<span class="token operator">-></span>fonts<span class="token operator">-></span>h <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token comment">// config.h</span>\n<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">int</span> user_bh <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span></code>',b(a,cs,s),b(a,ls,s),E(ls,hs),b(a,ps,s),b(a,us,s),us.innerHTML='<code class="language-bash">$ patch -p1 <span class="token operator">&lt;</span> ./path/to/patch.diff</code>',b(a,fs,s),b(a,ds,s),E(ds,ms),b(a,gs,s),b(a,ws,s),E(ws,ks),E(ks,ys),b(a,vs,s),b(a,bs,s),E(bs,Es),E(bs,Is),E(Is,Ts),E(bs,Ps),E(bs,Ss),E(Ss,xs),E(bs,As),b(a,Ms,s),b(a,Ls,s),E(Ls,Ds),E(Ls,Cs),E(Cs,Ws),E(Ls,Os),E(Ls,Hs),E(Hs,Rs),E(Ls,$s),E(Ls,js),E(js,Gs),E(Ls,Ns),E(Ls,Bs),E(Bs,Fs),E(Ls,Xs),E(Ls,Us),E(Us,zs),E(Ls,Ys),b(a,_s,s),b(a,Vs,s),E(Vs,qs),E(Vs,Js),E(Js,Ks),E(Vs,Zs),b(a,Qs,s),b(a,an,s),E(an,en),b(a,tn,s),b(a,on,s),on.innerHTML='<code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">|</span> lemonbar -g x1+0+28 -d -B <span class="token string">"#82aaff"</span> -p <span class="token operator">&amp;</span></code>',b(a,sn,s),b(a,nn,s),E(nn,rn),b(a,cn,s),b(a,ln,s),E(ln,hn),E(hn,pn),b(a,un,s),b(a,fn,s),E(fn,dn),E(dn,mn),b(a,gn,s),b(a,wn,s),E(wn,kn),b(a,yn,s),b(a,vn,s),vn.innerHTML='<code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"yes<span class="token entity" title="&#92;n">&#92;n</span>no"</span> <span class="token operator">|</span> dmenu</code>',b(a,bn,s),b(a,En,s),E(En,In),E(En,Tn),E(Tn,Pn),E(En,Sn),E(En,xn),E(xn,An),E(En,Mn),E(En,Ln),E(Ln,Dn),E(En,Cn),b(a,Wn,s),b(a,On,s),E(On,Hn),E(Hn,Rn),b(a,$n,s),b(a,jn,s),E(jn,Gn),E(jn,Nn),E(Nn,Bn),E(jn,Fn),E(jn,Xn),E(Xn,Un),E(jn,zn),b(a,Yn,s),b(a,_n,s),_n.innerHTML='<code class="language-bash">$ <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span></code>',b(a,Vn,s),b(a,qn,s),E(qn,Jn),b(a,Kn,s),b(a,Zn,s),E(Zn,Qn),E(Qn,ar),b(a,er,s),b(a,tr,s),E(tr,or),b(a,sr,s),b(a,nr,s),E(nr,rr),E(rr,ir),E(ir,cr),E(cr,lr),E(lr,hr),E(ir,pr),E(rr,ur),E(rr,fr),E(fr,dr),E(fr,mr),E(mr,gr),E(fr,wr),E(rr,kr),E(rr,yr),yr.innerHTML='<code class="language-c"><span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> lineheight <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span></code>',b(a,vr,s),b(a,br,s),E(br,Er),E(Er,Ir),b(a,Tr,s),b(a,Pr,s),E(Pr,Sr),E(Sr,xr),b(a,Ar,s),b(a,Mr,s),E(Mr,Lr),E(Mr,Dr),E(Dr,Cr),E(Mr,Wr),E(Mr,Or),E(Or,Hr),E(Mr,Rr),E(Mr,$r),E($r,jr),E(Mr,Gr),b(a,Nr,s),r(Br,a,s),b(a,Fr,s),b(a,Xr,s),E(Xr,Ur),E(Xr,zr),E(zr,Yr),E(Xr,_r),E(Xr,Vr),E(Vr,qr),E(Xr,Jr),b(a,Kr,s),b(a,Zr,s),E(Zr,Qr),E(Qr,ai),b(a,ei,s),b(a,ti,s),E(ti,oi),E(ti,si),E(si,ni),E(ti,ri),E(ti,ii),E(ii,ci),E(ti,li),b(a,hi,s),b(a,pi,s),pi.innerHTML='<code class="language-bash">$ <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span></code>',b(a,ui,s),b(a,fi,s),E(fi,di),b(a,mi,s),b(a,gi,s),E(gi,wi),E(wi,ki),b(a,yi,s),b(a,vi,s),E(vi,bi),b(a,Ei,s),b(a,Ii,s),E(Ii,Ti),E(Ti,Pi),E(Pi,Si),E(Si,xi),E(xi,Ai),E(Ti,Mi),E(Ti,Li),E(Li,Di),E(Li,Ci),E(Ci,Wi),E(Li,Oi),E(Ii,Hi),E(Ii,Ri),E(Ri,$i),E($i,ji),E(ji,Gi),E(Gi,Ni),E(Ri,Bi),E(Ri,Fi),E(Fi,Xi),E(Ii,Ui),E(Ii,zi),E(zi,Yi),E(Yi,_i),E(_i,Vi),E(Vi,qi),E(zi,Ji),E(zi,Ki),E(Ki,Zi),E(Ii,Qi),E(Ii,ac),E(ac,ec),E(ec,tc),E(tc,oc),E(oc,sc),E(ac,nc),E(ac,rc),E(rc,ic),E(rc,cc),E(cc,lc),E(rc,hc),E(rc,pc),E(pc,uc),E(rc,fc),E(Ii,dc),E(Ii,mc),E(mc,gc),E(gc,wc),E(wc,kc),E(kc,yc),E(mc,vc),E(mc,bc),E(bc,Ec),E(Ii,Ic),E(Ii,Tc),E(Tc,Pc),E(Pc,Sc),E(Sc,xc),E(xc,Ac),E(Tc,Mc),E(Tc,Lc),E(Lc,Dc),E(Ii,Cc),E(Ii,Wc),E(Wc,Oc),E(Oc,Hc),E(Hc,Rc),E(Rc,$c),E(Wc,jc),E(Wc,Gc),E(Gc,Nc),E(Gc,Bc),E(Bc,Fc),E(Gc,Xc),E(Gc,Uc),E(Uc,zc),E(Gc,Yc),E(Ii,_c),E(Ii,Vc),E(Vc,qc),E(qc,Jc),E(Jc,Kc),E(Vc,Zc),E(Vc,Qc),E(Qc,al),b(a,el,s),b(a,tl,s),E(tl,ol),E(ol,sl),b(a,nl,s),b(a,rl,s),E(rl,il),E(il,cl),b(a,ll,s),b(a,hl,s),E(hl,pl),E(hl,ul),E(ul,fl),E(hl,dl),b(a,ml,s),b(a,gl,s),gl.innerHTML='<code class="language-diff"><span class="token coord">--- dwm.c</span>\n<span class="token coord">+++ dwm.c</span>\n@@ -163,6 +163,7 @@ static void detach(Client *c);\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">static Monitor *dirtomon(int dir);\n</span><span class="token prefix unchanged"> </span><span class="token line">static void drawbar(Monitor *m);\n</span><span class="token prefix unchanged"> </span><span class="token line">static void drawbars(void);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">static int drawstatusbar(Monitor *m, int bh, char* text);\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">static void enternotify(XEvent *e);\n</span><span class="token prefix unchanged"> </span><span class="token line">static void expose(XEvent *e);\n</span><span class="token prefix unchanged"> </span><span class="token line">static void focus(Client *c);\n</span></span>@@ -237,7 +238,7 @@ static void zoom(const Arg *arg);\n\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">/* variables */\n</span><span class="token prefix unchanged"> </span><span class="token line">static const char broken[] = "broken";\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">static char stext[256];\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">static char stext[1024];\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">static int screen;\n</span><span class="token prefix unchanged"> </span><span class="token line">static int sw, sh;           /* X display screen geometry width, height */\n</span><span class="token prefix unchanged"> </span><span class="token line">static int bh, blw = 0;      /* bar geometry */</span></span></code>',b(a,wl,s),b(a,kl,s),E(kl,yl),E(kl,vl),E(vl,bl),E(kl,El),E(kl,Il),E(Il,Tl),E(kl,Pl),E(kl,Sl),E(Sl,xl),E(kl,Al),E(kl,Ml),E(Ml,Ll),E(kl,Dl),E(kl,Cl),E(Cl,Wl),E(kl,Ol),b(a,Hl,s),b(a,Rl,s),E(Rl,$l),E($l,jl),b(a,Gl,s),b(a,Nl,s),E(Nl,Bl),E(Nl,Fl),E(Fl,Xl),E(Nl,Ul),E(Nl,zl),E(zl,Yl),E(Nl,_l),b(a,Vl,s),b(a,ql,s),E(ql,Jl),E(Jl,Kl),b(a,Zl,s),b(a,Ql,s),E(Ql,ah),E(Ql,eh),E(eh,th),E(Ql,oh),E(Ql,sh),E(sh,nh),E(Ql,rh),b(a,ih,s),b(a,ch,s),ch.innerHTML='<code class="language-c"><span class="token comment">/* Do not allow using color fonts. This is a workaround for a BadLength\n * error from Xft with color glyphs. Modelled on the Xterm workaround. See\n * https://bugzilla.redhat.com/show_bug.cgi?id=1498269\n * https://lists.suckless.org/dev/1701/30932.html\n * https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=916349\n * and lots more all over the internet.\n */</span>\nFcBool iscol<span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">FcPatternGetBool</span><span class="token punctuation">(</span>xfont<span class="token operator">-></span>pattern<span class="token punctuation">,</span> FC_COLOR<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>iscol<span class="token punctuation">)</span> <span class="token operator">==</span> FcResultMatch <span class="token operator">&amp;&amp;</span> iscol<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">XftFontClose</span><span class="token punctuation">(</span>drw<span class="token operator">-></span>dpy<span class="token punctuation">,</span> xfont<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',b(a,lh,s),b(a,hh,s),E(hh,ph),E(hh,uh),E(uh,fh),E(hh,dh),b(a,mh,s),b(a,gh,s),E(gh,wh),E(wh,kh),b(a,yh,s),b(a,vh,s),E(vh,bh),E(vh,Eh),E(Eh,Ih),E(vh,Th),E(vh,Ph),E(Ph,Sh),b(a,xh,s),b(a,Ah,s),Ah.innerHTML='<code class="language-null">[Desktop Entry]\nName=dwm\nComment=dynamic window manager\nExec=dwm\nType=Application</code>',b(a,Mh,s),b(a,Lh,s),E(Lh,Dh),E(Lh,Ch),E(Ch,Wh),E(Lh,Oh),b(a,Hh,s),b(a,Rh,s),E(Rh,$h),E($h,jh),b(a,Gh,s),b(a,Nh,s),E(Nh,Bh),E(Nh,Fh),E(Fh,Xh),E(Nh,Uh),E(Nh,zh),E(zh,Yh),E(Nh,_h),b(a,Vh,s),b(a,qh,s),E(qh,Jh),E(Jh,Kh),b(a,Zh,s),b(a,Qh,s),E(Qh,ap),E(Qh,ep),E(ep,tp),E(Qh,op),E(Qh,sp),E(sp,np),E(Qh,rp),b(a,ip,s),b(a,cp,s),E(cp,lp),hp=!0},p(a,e){const t={};1&e&&(t.$$scope={dirty:e,ctx:a}),Oe.$set(t);const o={};1&e&&(o.$$scope={dirty:e,ctx:a}),Br.$set(o)},i(a){hp||(c(Oe.$$.fragment,a),c(Br.$$.fragment,a),hp=!0)},o(a){l(Oe.$$.fragment,a),l(Br.$$.fragment,a),hp=!1},d(a){a&&k(e),a&&k(i),a&&k(p),a&&k(ue),a&&k(fe),a&&k(ge),a&&k(we),a&&k(ye),a&&k(ve),a&&k(Ie),a&&k(Te),a&&k(xe),a&&k(Ae),a&&k(Le),a&&k(De),a&&k(We),h(Oe,a),a&&k(He),a&&k(Re),a&&k(je),a&&k(Ge),a&&k(Fe),a&&k(Xe),a&&k(_e),a&&k(Ve),a&&k(Qe),a&&k(at),a&&k(et),a&&k(tt),a&&k(st),a&&k(nt),a&&k(ct),a&&k(lt),a&&k(pt),a&&k(ut),a&&k(wt),a&&k(kt),a&&k(lo),a&&k(ho),a&&k(cs),a&&k(ls),a&&k(ps),a&&k(us),a&&k(fs),a&&k(ds),a&&k(gs),a&&k(ws),a&&k(vs),a&&k(bs),a&&k(Ms),a&&k(Ls),a&&k(_s),a&&k(Vs),a&&k(Qs),a&&k(an),a&&k(tn),a&&k(on),a&&k(sn),a&&k(nn),a&&k(cn),a&&k(ln),a&&k(un),a&&k(fn),a&&k(gn),a&&k(wn),a&&k(yn),a&&k(vn),a&&k(bn),a&&k(En),a&&k(Wn),a&&k(On),a&&k($n),a&&k(jn),a&&k(Yn),a&&k(_n),a&&k(Vn),a&&k(qn),a&&k(Kn),a&&k(Zn),a&&k(er),a&&k(tr),a&&k(sr),a&&k(nr),a&&k(vr),a&&k(br),a&&k(Tr),a&&k(Pr),a&&k(Ar),a&&k(Mr),a&&k(Nr),h(Br,a),a&&k(Fr),a&&k(Xr),a&&k(Kr),a&&k(Zr),a&&k(ei),a&&k(ti),a&&k(hi),a&&k(pi),a&&k(ui),a&&k(fi),a&&k(mi),a&&k(gi),a&&k(yi),a&&k(vi),a&&k(Ei),a&&k(Ii),a&&k(el),a&&k(tl),a&&k(nl),a&&k(rl),a&&k(ll),a&&k(hl),a&&k(ml),a&&k(gl),a&&k(wl),a&&k(kl),a&&k(Hl),a&&k(Rl),a&&k(Gl),a&&k(Nl),a&&k(Vl),a&&k(ql),a&&k(Zl),a&&k(Ql),a&&k(ih),a&&k(ch),a&&k(lh),a&&k(hh),a&&k(mh),a&&k(gh),a&&k(yh),a&&k(vh),a&&k(xh),a&&k(Ah),a&&k(Mh),a&&k(Lh),a&&k(Hh),a&&k(Rh),a&&k(Gh),a&&k(Nh),a&&k(Vh),a&&k(qh),a&&k(Zh),a&&k(Qh),a&&k(ip),a&&k(cp)}}}function A(a){let e,t;const u=[M];let f={$$slots:{default:[x]},$$scope:{ctx:a}};for(let s=0;s<u.length;s+=1)f=o(f,u[s]);return e=new I({props:f}),{c(){s(e.$$.fragment)},l(a){n(e.$$.fragment,a)},m(a,o){r(e,a,o),t=!0},p(a,[t]){const o=0&t?i(u,[p(M)]):{};1&t&&(o.$$scope={dirty:t,ctx:a}),e.$set(o)},i(a){t||(c(e.$$.fragment,a),t=!0)},o(a){l(e.$$.fragment,a),t=!1},d(a){h(e,a)}}}const M={title:"My Setup Using Suckless Software",date:"2020-06-04T00:00:00.000Z",desc:"A post where I fully explain about my setup using suckless's softwares",tags:["linux","window manager"]};export default class extends a{constructor(a){super(),e(this,a,null,A,t,{})}}export{M as metadata};
