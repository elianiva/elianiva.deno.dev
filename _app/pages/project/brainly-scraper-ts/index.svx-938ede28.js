import{S as e,i as r,s as t,o as a,p as s,r as o,u as i,v as n,x as h,y as l,z as c,w as u,e as f,t as p,a as y,f as d,g,k as m,d as b,c as v,h as w,j as $,l as q}from"../../../chunks/stores-7ca13020.js";import{P as I}from"../../../chunks/project-e94646f8.js";import"../../../chunks/ProgressButton-549bf321.js";import"../../../chunks/Chrome-a579d3f1.js";function j(e){let r,t,a,s,o,i,n,h,l,c,u,I,j,T,k,E,P,B,G;return{c(){r=f("p"),t=f("strong"),a=p("Brainly Scraper"),s=p(" is a tiny (~2KB) library that I made for "),o=f("a"),i=p("my whatsapp bot"),n=p(" which is now dead. I made this just for fun and learn Typescript."),h=y(),l=f("p"),c=p("After creating this library, I learned some stuff about HTTP request like headers which allow me to get the data from brainly. If the header isn’t present then my request would get rejected."),u=y(),I=f("p"),j=p("I also learned that you can query into GraphQL server using "),T=f("code"),k=p("query"),E=p(" object on the request body. I thought you can only get a request from a GraphQL server using GraphQL client like Apollo, urql, and Relay."),P=y(),B=f("p"),G=p("This library might be buggy. I never found an error though, if you’re interested with this library then feel free to give it a try."),this.h()},l(e){r=d(e,"P",{});var f=g(r);t=d(f,"STRONG",{});var p=g(t);a=m(p,"Brainly Scraper"),p.forEach(b),s=m(f," is a tiny (~2KB) library that I made for "),o=d(f,"A",{href:!0,rel:!0});var y=g(o);i=m(y,"my whatsapp bot"),y.forEach(b),n=m(f," which is now dead. I made this just for fun and learn Typescript."),f.forEach(b),h=v(e),l=d(e,"P",{});var w=g(l);c=m(w,"After creating this library, I learned some stuff about HTTP request like headers which allow me to get the data from brainly. If the header isn’t present then my request would get rejected."),w.forEach(b),u=v(e),I=d(e,"P",{});var $=g(I);j=m($,"I also learned that you can query into GraphQL server using "),T=d($,"CODE",{});var q=g(T);k=m(q,"query"),q.forEach(b),E=m($," object on the request body. I thought you can only get a request from a GraphQL server using GraphQL client like Apollo, urql, and Relay."),$.forEach(b),P=v(e),B=d(e,"P",{});var x=g(B);G=m(x,"This library might be buggy. I never found an error though, if you’re interested with this library then feel free to give it a try."),x.forEach(b),this.h()},h(){w(o,"href","https://github.com/elianiva/img-to-sticker-bot"),w(o,"rel","nofollow")},m(e,f){$(e,r,f),q(r,t),q(t,a),q(r,s),q(r,o),q(o,i),q(r,n),$(e,h,f),$(e,l,f),q(l,c),$(e,u,f),$(e,I,f),q(I,j),q(I,T),q(T,k),q(I,E),$(e,P,f),$(e,B,f),q(B,G)},d(e){e&&b(r),e&&b(h),e&&b(l),e&&b(u),e&&b(I),e&&b(P),e&&b(B)}}}function T(e){let r,t;const f=[k];let p={$$slots:{default:[j]},$$scope:{ctx:e}};for(let s=0;s<f.length;s+=1)p=a(p,f[s]);return r=new I({props:p}),{c(){s(r.$$.fragment)},l(e){o(r.$$.fragment,e)},m(e,a){i(r,e,a),t=!0},p(e,[t]){const a=0&t?n(f,[u(k)]):{};1&t&&(a.$$scope={dirty:t,ctx:e}),r.$set(a)},i(e){t||(h(r.$$.fragment,e),t=!0)},o(e){l(r.$$.fragment,e),t=!1},d(e){c(r,e)}}}const k={title:"Brainly Scraper",date:"2020-09-12T00:00:00.000Z",desc:"A tiny (~2KB) library to scrape data from brainly written in Typescript.",demo:!1,source:"https://github.com/elianiva/brainly-scraper-ts",layout:"project",stack:[["Typescript","https://typescriptlang.org"]]};export default class extends e{constructor(e){super(),r(this,e,null,T,t,{})}}export{k as metadata};
